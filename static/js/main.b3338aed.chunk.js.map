{"version":3,"sources":["App.js","index.js"],"names":["App","viewer","useRef","useEffect","WebViewer","path","initialDoc","fullAPI","enableMeasurement","current","then","instance","docViewer","Tools","setToolbarGroup","enableFeatures","Feature","SnapMode","setSnapMode","POINT_ON_LINE","console","log","getSnapMode","setToolMode","ToolNames","PERIMETER_MEASUREMENT","openElements","react_default","a","createElement","className","ref","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gLAyCeA,SArCH,WACV,IAAMC,EAASC,iBAAO,MA4BtB,OAzBAC,oBAAU,WACRC,IACE,CACEC,KAAM,wDACNC,WAAY,8DACZC,SAAS,EACTC,mBAAmB,GAErBP,EAAOQ,SACPC,KAAK,SAACC,GAAa,IACXC,EAAqBD,EAArBC,UAAWC,EAAUF,EAAVE,MAGnBF,EAASG,gBAAgB,wBACzBH,EAASI,eAAeJ,EAASK,QAAQC,UAGzCN,EAASO,YAAYN,EAAUK,SAASE,eAExCC,QAAQC,IAAI,WAAYV,EAASW,eACjCX,EAASY,YAAYV,EAAMW,UAAUC,uBACrCd,EAASe,aAAa,CAAC,sBAExB,IAGDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,IAAK9B,OC/BtC+B,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b3338aed.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nconst App = () => {\n  const viewer = useRef(null);\n\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    WebViewer(\n      {\n        path: 'https://correyl.github.io/snapmode-demo/webviewer/lib',\n        initialDoc: 'https://correyl.github.io/snapmode-demo/files/floorplan.pdf',\n        fullAPI: true,\n        enableMeasurement: true,\n      },\n      viewer.current,\n    ).then((instance) => {\n      const { docViewer, Tools } = instance;\n      // This toggles the internal state variable, ensuring that the checkbox will\n      // also be checked at the time it is rendered\n      instance.setToolbarGroup('toolbarGroup-Measure');\n      instance.enableFeatures(instance.Feature.SnapMode);\n      // This allows you to change the SnapMode to something other than\n      // docViewer.SnapMode.DEFAULT\n      instance.setSnapMode(docViewer.SnapMode.POINT_ON_LINE);\n      // I've also implemented a getter\n      console.log('snapMode', instance.getSnapMode());\n      instance.setToolMode(Tools.ToolNames.PERIMETER_MEASUREMENT);\n      instance.openElements(['toolStylePopup']);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}